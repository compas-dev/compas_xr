#usda 1.0
(
    defaultPrim = "ceiling"
    upAxis = "Z"
)

def Scope "Looks"
{
    def Material "Rhino_Default"
    {
        token outputs:displacement.connect = </Looks/Rhino_Default/Shader.outputs:displacement>
        token outputs:surface.connect = </Looks/Rhino_Default/Shader.outputs:surface>

        def Shader "Shader"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.01
            color3f inputs:diffuseColor = (1, 1, 1)
            float inputs:displacement = 0
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.5
            float inputs:metallic = 0.1
            normal3f inputs:normal = (0, 0, 1)
            float inputs:occlusion = 1
            float inputs:opacity
            float inputs:roughness = 0.5
            color3f inputs:specularColor = (0, 0, 0)
            int inputs:useSpecularWorkflow = 0
            token outputs:displacement
            token outputs:surface
        }

        def Shader "primvar_st0"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            float2 inputs:fallback = (0, 0)
            token inputs:varname = "st0"
            float2 outputs:result
        }

        def Shader "primvar_st1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            float2 inputs:fallback = (0, 0)
            token inputs:varname = "st1"
            float2 outputs:result
        }
    }

    def Material "Schwarzgrau_Nextel_Dark_Black"
    {
        token outputs:displacement.connect = </Looks/Schwarzgrau_Nextel_Dark_Black/Shader.outputs:displacement>
        token outputs:surface.connect = </Looks/Schwarzgrau_Nextel_Dark_Black/Shader.outputs:surface>

        def Shader "Shader"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.01
            color3f inputs:diffuseColor = (0.1882353, 0.19607843, 0.20392157)
            float inputs:displacement = 0
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.5
            float inputs:metallic = 0
            normal3f inputs:normal = (0, 0, 1)
            float inputs:occlusion = 1
            float inputs:opacity
            float inputs:roughness = 0.5
            color3f inputs:specularColor = (0, 0, 0)
            int inputs:useSpecularWorkflow = 1
            token outputs:displacement
            token outputs:surface
        }

        def Shader "primvar_st0"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            float2 inputs:fallback = (0, 0)
            token inputs:varname = "st0"
            float2 outputs:result
        }

        def Shader "primvar_st1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            float2 inputs:fallback = (0, 0)
            token inputs:varname = "st1"
            float2 outputs:result
        }
    }

    def Material "Platingrau"
    {
        token outputs:displacement.connect = </Looks/Platingrau/Shader.outputs:displacement>
        token outputs:surface.connect = </Looks/Platingrau/Shader.outputs:surface>

        def Shader "Shader"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.01
            color3f inputs:diffuseColor = (0.5921569, 0.5764706, 0.57254905)
            float inputs:displacement = 0
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.5
            float inputs:metallic = 0
            normal3f inputs:normal = (0, 0, 1)
            float inputs:occlusion = 1
            float inputs:opacity
            float inputs:roughness = 0.5
            color3f inputs:specularColor = (0, 0, 0)
            int inputs:useSpecularWorkflow = 1
            token outputs:displacement
            token outputs:surface
        }

        def Shader "primvar_st0"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            float2 inputs:fallback = (0, 0)
            token inputs:varname = "st0"
            float2 outputs:result
        }

        def Shader "primvar_st1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            float2 inputs:fallback = (0, 0)
            token inputs:varname = "st1"
            float2 outputs:result
        }
    }

    def Material "Cara_03_Shedland"
    {
        token outputs:displacement.connect = </Looks/Cara_03_Shedland/Shader.outputs:displacement>
        token outputs:surface.connect = </Looks/Cara_03_Shedland/Shader.outputs:surface>

        def Shader "Shader"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.01
            color3f inputs:diffuseColor = (0.98039216, 0.98039216, 0.98039216)
            float inputs:displacement = 0
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.5
            float inputs:metallic = 0
            normal3f inputs:normal = (0, 0, 1)
            float inputs:occlusion = 1
            float inputs:opacity
            float inputs:roughness = 0.5
            color3f inputs:specularColor = (0, 0, 0)
            int inputs:useSpecularWorkflow = 1
            token outputs:displacement
            token outputs:surface
        }

        def Shader "primvar_st0"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            float2 inputs:fallback = (0, 0)
            token inputs:varname = "st0"
            float2 outputs:result
        }

        def Shader "primvar_st1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            float2 inputs:fallback = (0, 0)
            token inputs:varname = "st1"
            float2 outputs:result
        }
    }
}

def Xform "world"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Xform "walls"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Xform "absorber"
        {
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "absorber7"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, 2.811, 4.042), (-5.225, 2.811, 5.792), (-5.125, 2.811, 5.792), (-5.125, 2.811, 4.042), (-5.225, 2.811, 5.792), (-5.225, 1.961, 5.792), (-5.125, 1.961, 5.792), (-5.125, 2.811, 5.792), (-5.225, 1.961, 5.792), (-5.225, 1.961, 4.042), (-5.125, 1.961, 4.042), (-5.125, 1.961, 5.792), (-5.225, 1.961, 4.042), (-5.225, 2.811, 4.042), (-5.125, 2.811, 4.042), (-5.125, 1.961, 4.042), (-5.225, 2.811, 4.042), (-5.225, 1.961, 4.042), (-5.225, 1.961, 5.792), (-5.225, 2.811, 5.792), (-5.125, 2.811, 4.042), (-5.125, 2.811, 5.792), (-5.125, 1.961, 5.792), (-5.125, 1.961, 4.042)]
            }

            def Mesh "absorber29"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-2.121, 3.785, 5.792), (-2.121, 3.785, 3.292), (-2.121, 3.685, 3.292), (-2.121, 3.685, 5.792), (-2.121, 3.785, 3.292), (-1.271, 3.785, 3.292), (-1.271, 3.685, 3.292), (-2.121, 3.685, 3.292), (-1.271, 3.785, 3.292), (-1.271, 3.785, 5.792), (-1.271, 3.685, 5.792), (-1.271, 3.685, 3.292), (-1.271, 3.785, 5.792), (-2.121, 3.785, 5.792), (-2.121, 3.685, 5.792), (-1.271, 3.685, 5.792), (-2.121, 3.785, 5.792), (-1.271, 3.785, 5.792), (-1.271, 3.785, 3.292), (-2.121, 3.785, 3.292), (-2.121, 3.685, 5.792), (-2.121, 3.685, 3.292), (-1.271, 3.685, 3.292), (-1.271, 3.685, 5.792)]
            }

            def Mesh "absorber28"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-1.259, 3.785, 5.792), (-1.259, 3.785, 3.792), (-1.259, 3.685, 3.792), (-1.259, 3.685, 5.792), (-1.259, 3.785, 3.792), (-0.409, 3.785, 3.792), (-0.409, 3.685, 3.792), (-1.259, 3.685, 3.792), (-0.409, 3.785, 3.792), (-0.409, 3.785, 5.792), (-0.409, 3.685, 5.792), (-0.409, 3.685, 3.792), (-0.409, 3.785, 5.792), (-1.259, 3.785, 5.792), (-1.259, 3.685, 5.792), (-0.409, 3.685, 5.792), (-1.259, 3.785, 5.792), (-0.409, 3.785, 5.792), (-0.409, 3.785, 3.792), (-1.259, 3.785, 3.792), (-1.259, 3.685, 5.792), (-1.259, 3.685, 3.792), (-0.409, 3.685, 3.792), (-0.409, 3.685, 5.792)]
            }

            def Mesh "absorber27"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-0.397, 3.785, 5.792), (-0.397, 3.785, 4.292), (-0.397, 3.685, 4.292), (-0.397, 3.685, 5.792), (-0.397, 3.785, 4.292), (0.453, 3.785, 4.292), (0.453, 3.685, 4.292), (-0.397, 3.685, 4.292), (0.453, 3.785, 4.292), (0.453, 3.785, 5.792), (0.453, 3.685, 5.792), (0.453, 3.685, 4.292), (0.453, 3.785, 5.792), (-0.397, 3.785, 5.792), (-0.397, 3.685, 5.792), (0.453, 3.685, 5.792), (-0.397, 3.785, 5.792), (0.453, 3.785, 5.792), (0.453, 3.785, 4.292), (-0.397, 3.785, 4.292), (-0.397, 3.685, 5.792), (-0.397, 3.685, 4.292), (0.453, 3.685, 4.292), (0.453, 3.685, 5.792)]
            }

            def Mesh "absorber26"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(0.465, 3.785, 5.792), (0.465, 3.785, 3.542), (0.465, 3.685, 3.542), (0.465, 3.685, 5.792), (0.465, 3.785, 3.542), (1.315, 3.785, 3.542), (1.315, 3.685, 3.542), (0.465, 3.685, 3.542), (1.315, 3.785, 3.542), (1.315, 3.785, 5.792), (1.315, 3.685, 5.792), (1.315, 3.685, 3.542), (1.315, 3.785, 5.792), (0.465, 3.785, 5.792), (0.465, 3.685, 5.792), (1.315, 3.685, 5.792), (0.465, 3.785, 5.792), (1.315, 3.785, 5.792), (1.315, 3.785, 3.542), (0.465, 3.785, 3.542), (0.465, 3.685, 5.792), (0.465, 3.685, 3.542), (1.315, 3.685, 3.542), (1.315, 3.685, 5.792)]
            }

            def Mesh "absorber25"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(1.327, 3.785, 5.792), (1.327, 3.785, 4.042), (1.327, 3.685, 4.042), (1.327, 3.685, 5.792), (1.327, 3.785, 4.042), (2.177, 3.785, 4.042), (2.177, 3.685, 4.042), (1.327, 3.685, 4.042), (2.177, 3.785, 4.042), (2.177, 3.785, 5.792), (2.177, 3.685, 5.792), (2.177, 3.685, 4.042), (2.177, 3.785, 5.792), (1.327, 3.785, 5.792), (1.327, 3.685, 5.792), (2.177, 3.685, 5.792), (1.327, 3.785, 5.792), (2.177, 3.785, 5.792), (2.177, 3.785, 4.042), (1.327, 3.785, 4.042), (1.327, 3.685, 5.792), (1.327, 3.685, 4.042), (2.177, 3.685, 4.042), (2.177, 3.685, 5.792)]
            }

            def Mesh "absorber24"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(2.189, 3.785, 5.792), (2.189, 3.785, 3.292), (2.189, 3.685, 3.292), (2.189, 3.685, 5.792), (2.189, 3.785, 3.292), (3.039, 3.785, 3.292), (3.039, 3.685, 3.292), (2.189, 3.685, 3.292), (3.039, 3.785, 3.292), (3.039, 3.785, 5.792), (3.039, 3.685, 5.792), (3.039, 3.685, 3.292), (3.039, 3.785, 5.792), (2.189, 3.785, 5.792), (2.189, 3.685, 5.792), (3.039, 3.685, 5.792), (2.189, 3.785, 5.792), (3.039, 3.785, 5.792), (3.039, 3.785, 3.292), (2.189, 3.785, 3.292), (2.189, 3.685, 5.792), (2.189, 3.685, 3.292), (3.039, 3.685, 3.292), (3.039, 3.685, 5.792)]
            }

            def Mesh "absorber23"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(3.051, 3.785, 5.792), (3.051, 3.785, 3.792), (3.051, 3.685, 3.792), (3.051, 3.685, 5.792), (3.051, 3.785, 3.792), (4.211, 3.785, 3.792), (4.211, 3.685, 3.792), (3.051, 3.685, 3.792), (4.211, 3.785, 3.792), (4.211, 3.785, 5.792), (4.211, 3.685, 5.792), (4.211, 3.685, 3.792), (4.211, 3.785, 5.792), (3.051, 3.785, 5.792), (3.051, 3.685, 5.792), (4.211, 3.685, 5.792), (3.051, 3.785, 5.792), (4.211, 3.785, 5.792), (4.211, 3.785, 3.792), (3.051, 3.785, 3.792), (3.051, 3.685, 5.792), (3.051, 3.685, 3.792), (4.211, 3.685, 3.792), (4.211, 3.685, 5.792)]
            }

            def Mesh "absorber22"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-1.271, 3.785, 2.27), (-1.271, 3.685, 2.27), (-1.271, 3.685, 0.018), (-1.271, 3.785, 0.018), (-1.271, 3.785, 0.018), (-1.271, 3.685, 0.018), (-2.121, 3.685, 0.018), (-2.121, 3.785, 0.018), (-2.121, 3.785, 0.018), (-2.121, 3.685, 0.018), (-2.121, 3.685, 2.27), (-2.121, 3.785, 2.27), (-2.121, 3.785, 2.27), (-2.121, 3.685, 2.27), (-1.271, 3.685, 2.27), (-1.271, 3.785, 2.27), (-1.271, 3.785, 2.27), (-1.271, 3.785, 0.018), (-2.121, 3.785, 0.018), (-2.121, 3.785, 2.27), (-1.271, 3.685, 2.27), (-2.121, 3.685, 2.27), (-2.121, 3.685, 0.018), (-1.271, 3.685, 0.018)]
            }

            def Mesh "absorber21"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-2.983, 3.785, 2.018), (-2.983, 3.785, 0.018), (-2.983, 3.685, 0.018), (-2.983, 3.685, 2.018), (-2.983, 3.785, 0.018), (-2.133, 3.785, 0.018), (-2.133, 3.685, 0.018), (-2.983, 3.685, 0.018), (-2.133, 3.785, 0.018), (-2.133, 3.785, 2.018), (-2.133, 3.685, 2.018), (-2.133, 3.685, 0.018), (-2.133, 3.785, 2.018), (-2.983, 3.785, 2.018), (-2.983, 3.685, 2.018), (-2.133, 3.685, 2.018), (-2.983, 3.785, 2.018), (-2.133, 3.785, 2.018), (-2.133, 3.785, 0.018), (-2.983, 3.785, 0.018), (-2.983, 3.685, 2.018), (-2.983, 3.685, 0.018), (-2.133, 3.685, 0.018), (-2.133, 3.685, 2.018)]
            }

            def Mesh "absorber20"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-2.995, 3.785, 2.42), (-2.995, 3.685, 2.42), (-2.995, 3.685, 0.018), (-2.995, 3.785, 0.018), (-2.995, 3.785, 0.018), (-2.995, 3.685, 0.018), (-4.155, 3.685, 0.018), (-4.155, 3.785, 0.018), (-4.155, 3.785, 0.018), (-4.155, 3.685, 0.018), (-4.155, 3.685, 2.42), (-4.155, 3.785, 2.42), (-4.155, 3.785, 2.42), (-4.155, 3.685, 2.42), (-2.995, 3.685, 2.42), (-2.995, 3.785, 2.42), (-2.995, 3.785, 2.42), (-2.995, 3.785, 0.018), (-4.155, 3.785, 0.018), (-4.155, 3.785, 2.42), (-2.995, 3.685, 2.42), (-4.155, 3.685, 2.42), (-4.155, 3.685, 0.018), (-2.995, 3.685, 0.018)]
            }

            def Mesh "absorber4"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, 0.225, 3.542), (-5.225, 0.225, 5.792), (-5.125, 0.225, 5.792), (-5.125, 0.225, 3.542), (-5.225, 0.225, 5.792), (-5.225, -0.625, 5.792), (-5.125, -0.625, 5.792), (-5.125, 0.225, 5.792), (-5.225, -0.625, 5.792), (-5.225, -0.625, 3.542), (-5.125, -0.625, 3.542), (-5.125, -0.625, 5.792), (-5.225, -0.625, 3.542), (-5.225, 0.225, 3.542), (-5.125, 0.225, 3.542), (-5.125, -0.625, 3.542), (-5.225, 0.225, 3.542), (-5.225, -0.625, 3.542), (-5.225, -0.625, 5.792), (-5.225, 0.225, 5.792), (-5.125, 0.225, 3.542), (-5.125, 0.225, 5.792), (-5.125, -0.625, 5.792), (-5.125, -0.625, 3.542)]
            }

            def Mesh "absorber49"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, -3.211, 0.018), (5.275, -3.211, 2.018), (5.175, -3.211, 2.018), (5.175, -3.211, 0.018), (5.275, -3.211, 2.018), (5.275, -2.361, 2.018), (5.175, -2.361, 2.018), (5.175, -3.211, 2.018), (5.275, -2.361, 2.018), (5.275, -2.361, 0.018), (5.175, -2.361, 0.018), (5.175, -2.361, 2.018), (5.275, -2.361, 0.018), (5.275, -3.211, 0.018), (5.175, -3.211, 0.018), (5.175, -2.361, 0.018), (5.275, -3.211, 0.018), (5.275, -2.361, 0.018), (5.275, -2.361, 2.018), (5.275, -3.211, 2.018), (5.175, -3.211, 0.018), (5.175, -3.211, 2.018), (5.175, -2.361, 2.018), (5.175, -2.361, 0.018)]
            }

            def Mesh "absorber48"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, -2.349, 0.018), (5.275, -2.349, 2.518), (5.175, -2.349, 2.518), (5.175, -2.349, 0.018), (5.275, -2.349, 2.518), (5.275, -1.499, 2.518), (5.175, -1.499, 2.518), (5.175, -2.349, 2.518), (5.275, -1.499, 2.518), (5.275, -1.499, 0.018), (5.175, -1.499, 0.018), (5.175, -1.499, 2.518), (5.275, -1.499, 0.018), (5.275, -2.349, 0.018), (5.175, -2.349, 0.018), (5.175, -1.499, 0.018), (5.275, -2.349, 0.018), (5.275, -1.499, 0.018), (5.275, -1.499, 2.518), (5.275, -2.349, 2.518), (5.175, -2.349, 0.018), (5.175, -2.349, 2.518), (5.175, -1.499, 2.518), (5.175, -1.499, 0.018)]
            }

            def Mesh "absorber47"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, 2.823, 3.392), (5.275, 2.823, 5.792), (5.175, 2.823, 5.792), (5.175, 2.823, 3.392), (5.275, 2.823, 5.792), (5.275, 3.673, 5.792), (5.175, 3.673, 5.792), (5.175, 2.823, 5.792), (5.275, 3.673, 5.792), (5.275, 3.673, 3.392), (5.175, 3.673, 3.392), (5.175, 3.673, 5.792), (5.275, 3.673, 3.392), (5.275, 2.823, 3.392), (5.175, 2.823, 3.392), (5.175, 3.673, 3.392), (5.275, 2.823, 3.392), (5.275, 3.673, 3.392), (5.275, 3.673, 5.792), (5.275, 2.823, 5.792), (5.175, 2.823, 3.392), (5.175, 2.823, 5.792), (5.175, 3.673, 5.792), (5.175, 3.673, 3.392)]
            }

            def Mesh "absorber46"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, 1.961, 4.042), (5.275, 1.961, 5.792), (5.175, 1.961, 5.792), (5.175, 1.961, 4.042), (5.275, 1.961, 5.792), (5.275, 2.811, 5.792), (5.175, 2.811, 5.792), (5.175, 1.961, 5.792), (5.275, 2.811, 5.792), (5.275, 2.811, 4.042), (5.175, 2.811, 4.042), (5.175, 2.811, 5.792), (5.275, 2.811, 4.042), (5.275, 1.961, 4.042), (5.175, 1.961, 4.042), (5.175, 2.811, 4.042), (5.275, 1.961, 4.042), (5.275, 2.811, 4.042), (5.275, 2.811, 5.792), (5.275, 1.961, 5.792), (5.175, 1.961, 4.042), (5.175, 1.961, 5.792), (5.175, 2.811, 5.792), (5.175, 2.811, 4.042)]
            }

            def Mesh "absorber45"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, 1.099, 3.792), (5.275, 1.099, 5.792), (5.175, 1.099, 5.792), (5.175, 1.099, 3.792), (5.275, 1.099, 5.792), (5.275, 1.949, 5.792), (5.175, 1.949, 5.792), (5.175, 1.099, 5.792), (5.275, 1.949, 5.792), (5.275, 1.949, 3.792), (5.175, 1.949, 3.792), (5.175, 1.949, 5.792), (5.275, 1.949, 3.792), (5.275, 1.099, 3.792), (5.175, 1.099, 3.792), (5.175, 1.949, 3.792), (5.275, 1.099, 3.792), (5.275, 1.949, 3.792), (5.275, 1.949, 5.792), (5.275, 1.099, 5.792), (5.175, 1.099, 3.792), (5.175, 1.099, 5.792), (5.175, 1.949, 5.792), (5.175, 1.949, 3.792)]
            }

            def Mesh "absorber44"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, 0.237, 4.292), (5.275, 0.237, 5.792), (5.175, 0.237, 5.792), (5.175, 0.237, 4.292), (5.275, 0.237, 5.792), (5.275, 1.087, 5.792), (5.175, 1.087, 5.792), (5.175, 0.237, 5.792), (5.275, 1.087, 5.792), (5.275, 1.087, 4.292), (5.175, 1.087, 4.292), (5.175, 1.087, 5.792), (5.275, 1.087, 4.292), (5.275, 0.237, 4.292), (5.175, 0.237, 4.292), (5.175, 1.087, 4.292), (5.275, 0.237, 4.292), (5.275, 1.087, 4.292), (5.275, 1.087, 5.792), (5.275, 0.237, 5.792), (5.175, 0.237, 4.292), (5.175, 0.237, 5.792), (5.175, 1.087, 5.792), (5.175, 1.087, 4.292)]
            }

            def Mesh "absorber43"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, -0.625, 3.542), (5.275, -0.625, 5.792), (5.175, -0.625, 5.792), (5.175, -0.625, 3.542), (5.275, -0.625, 5.792), (5.275, 0.225, 5.792), (5.175, 0.225, 5.792), (5.175, -0.625, 5.792), (5.275, 0.225, 5.792), (5.275, 0.225, 3.542), (5.175, 0.225, 3.542), (5.175, 0.225, 5.792), (5.275, 0.225, 3.542), (5.275, -0.625, 3.542), (5.175, -0.625, 3.542), (5.175, 0.225, 3.542), (5.275, -0.625, 3.542), (5.275, 0.225, 3.542), (5.275, 0.225, 5.792), (5.275, -0.625, 5.792), (5.175, -0.625, 3.542), (5.175, -0.625, 5.792), (5.175, 0.225, 5.792), (5.175, 0.225, 3.542)]
            }

            def Mesh "absorber9"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, -3.223, 0.018), (-5.225, -3.223, 2.268), (-5.125, -3.223, 2.268), (-5.125, -3.223, 0.018), (-5.225, -3.223, 2.268), (-5.225, -4.073, 2.268), (-5.125, -4.073, 2.268), (-5.125, -3.223, 2.268), (-5.225, -4.073, 2.268), (-5.225, -4.073, 0.018), (-5.125, -4.073, 0.018), (-5.125, -4.073, 2.268), (-5.225, -4.073, 0.018), (-5.225, -3.223, 0.018), (-5.125, -3.223, 0.018), (-5.125, -4.073, 0.018), (-5.225, -3.223, 0.018), (-5.225, -4.073, 0.018), (-5.225, -4.073, 2.268), (-5.225, -3.223, 2.268), (-5.125, -3.223, 0.018), (-5.125, -3.223, 2.268), (-5.125, -4.073, 2.268), (-5.125, -4.073, 0.018)]
            }

            def Mesh "absorber41"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, -2.349, 3.792), (5.275, -2.349, 5.792), (5.175, -2.349, 5.792), (5.175, -2.349, 3.792), (5.275, -2.349, 5.792), (5.275, -1.499, 5.792), (5.175, -1.499, 5.792), (5.175, -2.349, 5.792), (5.275, -1.499, 5.792), (5.275, -1.499, 3.792), (5.175, -1.499, 3.792), (5.175, -1.499, 5.792), (5.275, -1.499, 3.792), (5.275, -2.349, 3.792), (5.175, -2.349, 3.792), (5.175, -1.499, 3.792), (5.275, -2.349, 3.792), (5.275, -1.499, 3.792), (5.275, -1.499, 5.792), (5.275, -2.349, 5.792), (5.175, -2.349, 3.792), (5.175, -2.349, 5.792), (5.175, -1.499, 5.792), (5.175, -1.499, 3.792)]
            }

            def Mesh "absorber40"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, -3.211, 3.542), (5.275, -3.211, 5.792), (5.175, -3.211, 5.792), (5.175, -3.211, 3.542), (5.275, -3.211, 5.792), (5.275, -2.361, 5.792), (5.175, -2.361, 5.792), (5.175, -3.211, 5.792), (5.275, -2.361, 5.792), (5.275, -2.361, 3.542), (5.175, -2.361, 3.542), (5.175, -2.361, 5.792), (5.275, -2.361, 3.542), (5.275, -3.211, 3.542), (5.175, -3.211, 3.542), (5.175, -2.361, 3.542), (5.275, -3.211, 3.542), (5.275, -2.361, 3.542), (5.275, -2.361, 5.792), (5.275, -3.211, 5.792), (5.175, -3.211, 3.542), (5.175, -3.211, 5.792), (5.175, -2.361, 5.792), (5.175, -2.361, 3.542)]
            }

            def Mesh "absorber42"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, -1.487, 4.292), (5.275, -1.487, 5.792), (5.175, -1.487, 5.792), (5.175, -1.487, 4.292), (5.275, -1.487, 5.792), (5.275, -0.637, 5.792), (5.175, -0.637, 5.792), (5.175, -1.487, 5.792), (5.275, -0.637, 5.792), (5.275, -0.637, 4.292), (5.175, -0.637, 4.292), (5.175, -0.637, 5.792), (5.275, -0.637, 4.292), (5.275, -1.487, 4.292), (5.175, -1.487, 4.292), (5.175, -0.637, 4.292), (5.275, -1.487, 4.292), (5.275, -0.637, 4.292), (5.275, -0.637, 5.792), (5.275, -1.487, 5.792), (5.175, -1.487, 4.292), (5.175, -1.487, 5.792), (5.175, -0.637, 5.792), (5.175, -0.637, 4.292)]
            }

            def Mesh "absorber1"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, -2.361, 4.042), (-5.225, -2.361, 5.792), (-5.125, -2.361, 5.792), (-5.125, -2.361, 4.042), (-5.225, -2.361, 5.792), (-5.225, -3.211, 5.792), (-5.125, -3.211, 5.792), (-5.125, -2.361, 5.792), (-5.225, -3.211, 5.792), (-5.225, -3.211, 4.042), (-5.125, -3.211, 4.042), (-5.125, -3.211, 5.792), (-5.225, -3.211, 4.042), (-5.225, -2.361, 4.042), (-5.125, -2.361, 4.042), (-5.125, -3.211, 4.042), (-5.225, -2.361, 4.042), (-5.225, -3.211, 4.042), (-5.225, -3.211, 5.792), (-5.225, -2.361, 5.792), (-5.125, -2.361, 4.042), (-5.125, -2.361, 5.792), (-5.125, -3.211, 5.792), (-5.125, -3.211, 4.042)]
            }

            def Mesh "absorber6"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, 1.949, 3.792), (-5.225, 1.949, 5.792), (-5.125, 1.949, 5.792), (-5.125, 1.949, 3.792), (-5.225, 1.949, 5.792), (-5.225, 1.099, 5.792), (-5.125, 1.099, 5.792), (-5.125, 1.949, 5.792), (-5.225, 1.099, 5.792), (-5.225, 1.099, 3.792), (-5.125, 1.099, 3.792), (-5.125, 1.099, 5.792), (-5.225, 1.099, 3.792), (-5.225, 1.949, 3.792), (-5.125, 1.949, 3.792), (-5.125, 1.099, 3.792), (-5.225, 1.949, 3.792), (-5.225, 1.099, 3.792), (-5.225, 1.099, 5.792), (-5.225, 1.949, 5.792), (-5.125, 1.949, 3.792), (-5.125, 1.949, 5.792), (-5.125, 1.099, 5.792), (-5.125, 1.099, 3.792)]
            }

            def Mesh "absorber3"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, -0.637, 4.042), (-5.225, -0.637, 5.792), (-5.125, -0.637, 5.792), (-5.125, -0.637, 4.042), (-5.225, -0.637, 5.792), (-5.225, -1.487, 5.792), (-5.125, -1.487, 5.792), (-5.125, -0.637, 5.792), (-5.225, -1.487, 5.792), (-5.225, -1.487, 4.042), (-5.125, -1.487, 4.042), (-5.125, -1.487, 5.792), (-5.225, -1.487, 4.042), (-5.225, -0.637, 4.042), (-5.125, -0.637, 4.042), (-5.125, -1.487, 4.042), (-5.225, -0.637, 4.042), (-5.225, -1.487, 4.042), (-5.225, -1.487, 5.792), (-5.225, -0.637, 5.792), (-5.125, -0.637, 4.042), (-5.125, -0.637, 5.792), (-5.125, -1.487, 5.792), (-5.125, -1.487, 4.042)]
            }

            def Mesh "absorber19"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21, 25, 26, 27, 27, 24, 25, 29, 30, 31, 31, 28, 29, 33, 34, 35, 35, 32, 33]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.125, 3.685, 3.392), (-5.125, 3.695, 3.392), (-5.125, 3.695, 5.792), (-5.125, 3.685, 5.792), (-5.225, 4.0350103, 5.792), (-5.125, 3.695, 5.792), (-5.125, 3.695, 3.392), (-5.1529403, 3.79, 3.392), (-5.225, 4.0350103, 3.425), (-5.235, 4.0350103, 3.425), (-5.235, 4.0350103, 5.792), (-5.225, 4.0350103, 5.792), (-5.235, 3.79, 3.392), (-5.235, 3.685, 3.392), (-5.235, 3.685, 5.792), (-5.235, 4.0350103, 5.792), (-5.235, 3.685, 3.392), (-5.125, 3.685, 3.392), (-5.125, 3.685, 5.792), (-5.235, 3.685, 5.792), (-5.1529403, 3.79, 3.392), (-5.125, 3.685, 3.392), (-5.235, 3.685, 3.392), (-5.235, 3.79, 3.392), (-5.125, 3.685, 5.792), (-5.225, 4.0350103, 5.792), (-5.235, 4.0350103, 5.792), (-5.235, 3.685, 5.792), (-5.235, 3.79, 3.425), (-5.1529403, 3.79, 3.425), (-5.1529403, 3.79, 3.392), (-5.235, 3.79, 3.392), (-5.1529403, 3.79, 3.425), (-5.235, 3.79, 3.425), (-5.235, 4.0350103, 3.425), (-5.225, 4.0350103, 3.425)]
            }

            def Mesh "absorber18"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21, 25, 26, 27, 27, 24, 25]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.125, 3.685, 0.018), (-5.125, 3.695, 0.018), (-5.125, 3.695, 2.418), (-5.125, 3.685, 2.418), (-5.125, 3.695, 0.018), (-5.225, 3.9350104, 0.018), (-5.225, 3.9350104, 2.418), (-5.125, 3.695, 2.418), (-5.225, 3.9350104, 0.018), (-5.235, 3.9350104, 0.018), (-5.235, 3.9350104, 2.418), (-5.225, 3.9350104, 2.418), (-5.235, 3.9350104, 0.018), (-5.235, 3.685, 0.018), (-5.235, 3.685, 2.418), (-5.235, 3.9350104, 2.418), (-5.235, 3.685, 0.018), (-5.125, 3.685, 0.018), (-5.125, 3.685, 2.418), (-5.235, 3.685, 2.418), (-5.125, 3.685, 0.018), (-5.235, 3.685, 0.018), (-5.235, 3.9350104, 0.018), (-5.225, 3.9350104, 0.018), (-5.125, 3.685, 2.418), (-5.225, 3.9350104, 2.418), (-5.235, 3.9350104, 2.418), (-5.235, 3.685, 2.418)]
            }

            def Mesh "absorber17"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, 3.673, 0.018), (-5.225, 3.673, 2.418), (-5.125, 3.673, 2.418), (-5.125, 3.673, 0.018), (-5.225, 3.673, 2.418), (-5.225, 2.823, 2.418), (-5.125, 2.823, 2.418), (-5.125, 3.673, 2.418), (-5.225, 2.823, 2.418), (-5.225, 2.823, 0.018), (-5.125, 2.823, 0.018), (-5.125, 2.823, 2.418), (-5.225, 2.823, 0.018), (-5.225, 3.673, 0.018), (-5.125, 3.673, 0.018), (-5.125, 2.823, 0.018), (-5.225, 3.673, 0.018), (-5.225, 2.823, 0.018), (-5.225, 2.823, 2.418), (-5.225, 3.673, 2.418), (-5.125, 3.673, 0.018), (-5.125, 3.673, 2.418), (-5.125, 2.823, 2.418), (-5.125, 2.823, 0.018)]
            }

            def Mesh "absorber16"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, 2.811, 0.018), (-5.225, 2.811, 2.018), (-5.125, 2.811, 2.018), (-5.125, 2.811, 0.018), (-5.225, 2.811, 2.018), (-5.225, 1.961, 2.018), (-5.125, 1.961, 2.018), (-5.125, 2.811, 2.018), (-5.225, 1.961, 2.018), (-5.225, 1.961, 0.018), (-5.125, 1.961, 0.018), (-5.125, 1.961, 2.018), (-5.225, 1.961, 0.018), (-5.225, 2.811, 0.018), (-5.125, 2.811, 0.018), (-5.125, 1.961, 0.018), (-5.225, 2.811, 0.018), (-5.225, 1.961, 0.018), (-5.225, 1.961, 2.018), (-5.225, 2.811, 2.018), (-5.125, 2.811, 0.018), (-5.125, 2.811, 2.018), (-5.125, 1.961, 2.018), (-5.125, 1.961, 0.018)]
            }

            def Mesh "absorber15"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, 1.949, 0.018), (-5.225, 1.949, 2.268), (-5.125, 1.949, 2.268), (-5.125, 1.949, 0.018), (-5.225, 1.949, 2.268), (-5.225, 1.099, 2.268), (-5.125, 1.099, 2.268), (-5.125, 1.949, 2.268), (-5.225, 1.099, 2.268), (-5.225, 1.099, 0.018), (-5.125, 1.099, 0.018), (-5.125, 1.099, 2.268), (-5.225, 1.099, 0.018), (-5.225, 1.949, 0.018), (-5.125, 1.949, 0.018), (-5.125, 1.099, 0.018), (-5.225, 1.949, 0.018), (-5.225, 1.099, 0.018), (-5.225, 1.099, 2.268), (-5.225, 1.949, 2.268), (-5.125, 1.949, 0.018), (-5.125, 1.949, 2.268), (-5.125, 1.099, 2.268), (-5.125, 1.099, 0.018)]
            }

            def Mesh "absorber8"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, 3.673, 3.392), (-5.225, 3.673, 5.792), (-5.125, 3.673, 5.792), (-5.125, 3.673, 3.392), (-5.225, 3.673, 5.792), (-5.225, 2.823, 5.792), (-5.125, 2.823, 5.792), (-5.125, 3.673, 5.792), (-5.225, 2.823, 5.792), (-5.225, 2.823, 3.392), (-5.125, 2.823, 3.392), (-5.125, 2.823, 5.792), (-5.225, 2.823, 3.392), (-5.225, 3.673, 3.392), (-5.125, 3.673, 3.392), (-5.125, 2.823, 3.392), (-5.225, 3.673, 3.392), (-5.225, 2.823, 3.392), (-5.225, 2.823, 5.792), (-5.225, 3.673, 5.792), (-5.125, 3.673, 3.392), (-5.125, 3.673, 5.792), (-5.125, 2.823, 5.792), (-5.125, 2.823, 3.392)]
            }

            def Mesh "absorber13"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, 0.225, 0.018), (-5.225, 0.225, 2.518), (-5.125, 0.225, 2.518), (-5.125, 0.225, 0.018), (-5.225, 0.225, 2.518), (-5.225, -0.625, 2.518), (-5.125, -0.625, 2.518), (-5.125, 0.225, 2.518), (-5.225, -0.625, 2.518), (-5.225, -0.625, 0.018), (-5.125, -0.625, 0.018), (-5.125, -0.625, 2.518), (-5.225, -0.625, 0.018), (-5.225, 0.225, 0.018), (-5.125, 0.225, 0.018), (-5.125, -0.625, 0.018), (-5.225, 0.225, 0.018), (-5.225, -0.625, 0.018), (-5.225, -0.625, 2.518), (-5.225, 0.225, 2.518), (-5.125, 0.225, 0.018), (-5.125, 0.225, 2.518), (-5.125, -0.625, 2.518), (-5.125, -0.625, 0.018)]
            }

            def Mesh "absorber12"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, -0.637, 0.018), (-5.225, -0.637, 2.268), (-5.125, -0.637, 2.268), (-5.125, -0.637, 0.018), (-5.225, -0.637, 2.268), (-5.225, -1.487, 2.268), (-5.125, -1.487, 2.268), (-5.125, -0.637, 2.268), (-5.225, -1.487, 2.268), (-5.225, -1.487, 0.018), (-5.125, -1.487, 0.018), (-5.125, -1.487, 2.268), (-5.225, -1.487, 0.018), (-5.225, -0.637, 0.018), (-5.125, -0.637, 0.018), (-5.125, -1.487, 0.018), (-5.225, -0.637, 0.018), (-5.225, -1.487, 0.018), (-5.225, -1.487, 2.268), (-5.225, -0.637, 2.268), (-5.125, -0.637, 0.018), (-5.125, -0.637, 2.268), (-5.125, -1.487, 2.268), (-5.125, -1.487, 0.018)]
            }

            def Mesh "absorber11"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, -1.499, 0.018), (-5.225, -1.499, 2.018), (-5.125, -1.499, 2.018), (-5.125, -1.499, 0.018), (-5.225, -1.499, 2.018), (-5.225, -2.349, 2.018), (-5.125, -2.349, 2.018), (-5.125, -1.499, 2.018), (-5.225, -2.349, 2.018), (-5.225, -2.349, 0.018), (-5.125, -2.349, 0.018), (-5.125, -2.349, 2.018), (-5.225, -2.349, 0.018), (-5.225, -1.499, 0.018), (-5.125, -1.499, 0.018), (-5.125, -2.349, 0.018), (-5.225, -1.499, 0.018), (-5.225, -2.349, 0.018), (-5.225, -2.349, 2.018), (-5.225, -1.499, 2.018), (-5.125, -1.499, 0.018), (-5.125, -1.499, 2.018), (-5.125, -2.349, 2.018), (-5.125, -2.349, 0.018)]
            }

            def Mesh "absorber10"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, -2.361, 0.018), (-5.225, -2.361, 2.518), (-5.125, -2.361, 2.518), (-5.125, -2.361, 0.018), (-5.225, -2.361, 2.518), (-5.225, -3.211, 2.518), (-5.125, -3.211, 2.518), (-5.125, -2.361, 2.518), (-5.225, -3.211, 2.518), (-5.225, -3.211, 0.018), (-5.125, -3.211, 0.018), (-5.125, -3.211, 2.518), (-5.225, -3.211, 0.018), (-5.225, -2.361, 0.018), (-5.125, -2.361, 0.018), (-5.125, -3.211, 0.018), (-5.225, -2.361, 0.018), (-5.225, -3.211, 0.018), (-5.225, -3.211, 2.518), (-5.225, -2.361, 2.518), (-5.125, -2.361, 0.018), (-5.125, -2.361, 2.518), (-5.125, -3.211, 2.518), (-5.125, -3.211, 0.018)]
            }

            def Mesh "absorber14"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, 1.087, 0.018), (-5.225, 1.087, 2.018), (-5.125, 1.087, 2.018), (-5.125, 1.087, 0.018), (-5.225, 1.087, 2.018), (-5.225, 0.237, 2.018), (-5.125, 0.237, 2.018), (-5.125, 1.087, 2.018), (-5.225, 0.237, 2.018), (-5.225, 0.237, 0.018), (-5.125, 0.237, 0.018), (-5.125, 0.237, 2.018), (-5.225, 0.237, 0.018), (-5.225, 1.087, 0.018), (-5.125, 1.087, 0.018), (-5.125, 0.237, 0.018), (-5.225, 1.087, 0.018), (-5.225, 0.237, 0.018), (-5.225, 0.237, 2.018), (-5.225, 1.087, 2.018), (-5.125, 1.087, 0.018), (-5.125, 1.087, 2.018), (-5.125, 0.237, 2.018), (-5.125, 0.237, 0.018)]
            }

            def Mesh "absorber0"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, -3.223, 4.292), (-5.225, -3.223, 5.792), (-5.125, -3.223, 5.792), (-5.125, -3.223, 4.292), (-5.225, -3.223, 5.792), (-5.225, -4.073, 5.792), (-5.125, -4.073, 5.792), (-5.125, -3.223, 5.792), (-5.225, -4.073, 5.792), (-5.225, -4.073, 4.292), (-5.125, -4.073, 4.292), (-5.125, -4.073, 5.792), (-5.225, -4.073, 4.292), (-5.225, -3.223, 4.292), (-5.125, -3.223, 4.292), (-5.125, -4.073, 4.292), (-5.225, -3.223, 4.292), (-5.225, -4.073, 4.292), (-5.225, -4.073, 5.792), (-5.225, -3.223, 5.792), (-5.125, -3.223, 4.292), (-5.125, -3.223, 5.792), (-5.125, -4.073, 5.792), (-5.125, -4.073, 4.292)]
            }

            def Mesh "absorber39"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, -4.073, 4.292), (5.275, -4.073, 5.792), (5.175, -4.073, 5.792), (5.175, -4.073, 4.292), (5.275, -4.073, 5.792), (5.275, -3.223, 5.792), (5.175, -3.223, 5.792), (5.175, -4.073, 5.792), (5.275, -3.223, 5.792), (5.275, -3.223, 4.292), (5.175, -3.223, 4.292), (5.175, -3.223, 5.792), (5.275, -3.223, 4.292), (5.275, -4.073, 4.292), (5.175, -4.073, 4.292), (5.175, -3.223, 4.292), (5.275, -4.073, 4.292), (5.275, -3.223, 4.292), (5.275, -3.223, 5.792), (5.275, -4.073, 5.792), (5.175, -4.073, 4.292), (5.175, -4.073, 5.792), (5.175, -3.223, 5.792), (5.175, -3.223, 4.292)]
            }

            def Mesh "absorber38"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, -4.073, 0.018), (5.275, -4.073, 2.268), (5.175, -4.073, 2.268), (5.175, -4.073, 0.018), (5.275, -4.073, 2.268), (5.275, -3.223, 2.268), (5.175, -3.223, 2.268), (5.175, -4.073, 2.268), (5.275, -3.223, 2.268), (5.275, -3.223, 0.018), (5.175, -3.223, 0.018), (5.175, -3.223, 2.268), (5.275, -3.223, 0.018), (5.275, -4.073, 0.018), (5.175, -4.073, 0.018), (5.175, -3.223, 0.018), (5.275, -4.073, 0.018), (5.275, -3.223, 0.018), (5.275, -3.223, 2.268), (5.275, -4.073, 2.268), (5.175, -4.073, 0.018), (5.175, -4.073, 2.268), (5.175, -3.223, 2.268), (5.175, -3.223, 0.018)]
            }

            def Mesh "absorber37"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-4.155, 3.785, 5.792), (-4.155, 3.785, 3.792), (-4.155, 3.685, 3.792), (-4.155, 3.685, 5.792), (-4.155, 3.785, 3.792), (-2.995, 3.785, 3.792), (-2.995, 3.685, 3.792), (-4.155, 3.685, 3.792), (-2.995, 3.785, 3.792), (-2.995, 3.785, 5.792), (-2.995, 3.685, 5.792), (-2.995, 3.685, 3.792), (-2.995, 3.785, 5.792), (-4.155, 3.785, 5.792), (-4.155, 3.685, 5.792), (-2.995, 3.685, 5.792), (-4.155, 3.785, 5.792), (-2.995, 3.785, 5.792), (-2.995, 3.785, 3.792), (-4.155, 3.785, 3.792), (-4.155, 3.685, 5.792), (-4.155, 3.685, 3.792), (-2.995, 3.685, 3.792), (-2.995, 3.685, 5.792)]
            }

            def Mesh "absorber36"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-1.259, 3.785, 2.518), (-1.259, 3.785, 0.018), (-1.259, 3.685, 0.018), (-1.259, 3.685, 2.518), (-1.259, 3.785, 0.018), (-0.409, 3.785, 0.018), (-0.409, 3.685, 0.018), (-1.259, 3.685, 0.018), (-0.409, 3.785, 0.018), (-0.409, 3.785, 2.518), (-0.409, 3.685, 2.518), (-0.409, 3.685, 0.018), (-0.409, 3.785, 2.518), (-1.259, 3.785, 2.518), (-1.259, 3.685, 2.518), (-0.409, 3.685, 2.518), (-1.259, 3.785, 2.518), (-0.409, 3.785, 2.518), (-0.409, 3.785, 0.018), (-1.259, 3.785, 0.018), (-1.259, 3.685, 2.518), (-1.259, 3.685, 0.018), (-0.409, 3.685, 0.018), (-0.409, 3.685, 2.518)]
            }

            def Mesh "absorber35"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-0.397, 3.785, 2.268), (-0.397, 3.785, 0.018), (-0.397, 3.685, 0.018), (-0.397, 3.685, 2.268), (-0.397, 3.785, 0.018), (0.453, 3.785, 0.018), (0.453, 3.685, 0.018), (-0.397, 3.685, 0.018), (0.453, 3.785, 0.018), (0.453, 3.785, 2.268), (0.453, 3.685, 2.268), (0.453, 3.685, 0.018), (0.453, 3.785, 2.268), (-0.397, 3.785, 2.268), (-0.397, 3.685, 2.268), (0.453, 3.685, 2.268), (-0.397, 3.785, 2.268), (0.453, 3.785, 2.268), (0.453, 3.785, 0.018), (-0.397, 3.785, 0.018), (-0.397, 3.685, 2.268), (-0.397, 3.685, 0.018), (0.453, 3.685, 0.018), (0.453, 3.685, 2.268)]
            }

            def Mesh "absorber34"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(0.465, 3.785, 2.018), (0.465, 3.785, 0.018), (0.465, 3.685, 0.018), (0.465, 3.685, 2.018), (0.465, 3.785, 0.018), (1.315, 3.785, 0.018), (1.315, 3.685, 0.018), (0.465, 3.685, 0.018), (1.315, 3.785, 0.018), (1.315, 3.785, 2.018), (1.315, 3.685, 2.018), (1.315, 3.685, 0.018), (1.315, 3.785, 2.018), (0.465, 3.785, 2.018), (0.465, 3.685, 2.018), (1.315, 3.685, 2.018), (0.465, 3.785, 2.018), (1.315, 3.785, 2.018), (1.315, 3.785, 0.018), (0.465, 3.785, 0.018), (0.465, 3.685, 2.018), (0.465, 3.685, 0.018), (1.315, 3.685, 0.018), (1.315, 3.685, 2.018)]
            }

            def Mesh "absorber33"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(2.177, 3.785, 2.27), (2.177, 3.685, 2.27), (2.177, 3.685, 0.018), (2.177, 3.785, 0.018), (2.177, 3.785, 0.018), (2.177, 3.685, 0.018), (1.327, 3.685, 0.018), (1.327, 3.785, 0.018), (1.327, 3.785, 0.018), (1.327, 3.685, 0.018), (1.327, 3.685, 2.27), (1.327, 3.785, 2.27), (1.327, 3.785, 2.27), (1.327, 3.685, 2.27), (2.177, 3.685, 2.27), (2.177, 3.785, 2.27), (2.177, 3.785, 2.27), (2.177, 3.785, 0.018), (1.327, 3.785, 0.018), (1.327, 3.785, 2.27), (2.177, 3.685, 2.27), (1.327, 3.685, 2.27), (1.327, 3.685, 0.018), (2.177, 3.685, 0.018)]
            }

            def Mesh "absorber5"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, 1.087, 4.292), (-5.225, 1.087, 5.792), (-5.125, 1.087, 5.792), (-5.125, 1.087, 4.292), (-5.225, 1.087, 5.792), (-5.225, 0.237, 5.792), (-5.125, 0.237, 5.792), (-5.125, 1.087, 5.792), (-5.225, 0.237, 5.792), (-5.225, 0.237, 4.292), (-5.125, 0.237, 4.292), (-5.125, 0.237, 5.792), (-5.225, 0.237, 4.292), (-5.225, 1.087, 4.292), (-5.125, 1.087, 4.292), (-5.125, 0.237, 4.292), (-5.225, 1.087, 4.292), (-5.225, 0.237, 4.292), (-5.225, 0.237, 5.792), (-5.225, 1.087, 5.792), (-5.125, 1.087, 4.292), (-5.125, 1.087, 5.792), (-5.125, 0.237, 5.792), (-5.125, 0.237, 4.292)]
            }

            def Mesh "absorber31"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(3.051, 3.785, 2.42), (3.051, 3.785, 0.018), (3.051, 3.685, 0.018), (3.051, 3.685, 2.42), (3.051, 3.785, 0.018), (4.211, 3.785, 0.018), (4.211, 3.685, 0.018), (3.051, 3.685, 0.018), (4.211, 3.785, 0.018), (4.211, 3.785, 2.42), (4.211, 3.685, 2.42), (4.211, 3.685, 0.018), (4.211, 3.785, 2.42), (3.051, 3.785, 2.42), (3.051, 3.685, 2.42), (4.211, 3.685, 2.42), (3.051, 3.785, 2.42), (4.211, 3.785, 2.42), (4.211, 3.785, 0.018), (3.051, 3.785, 0.018), (3.051, 3.685, 2.42), (3.051, 3.685, 0.018), (4.211, 3.685, 0.018), (4.211, 3.685, 2.42)]
            }

            def Mesh "absorber30"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-2.983, 3.785, 5.792), (-2.983, 3.785, 4.042), (-2.983, 3.685, 4.042), (-2.983, 3.685, 5.792), (-2.983, 3.785, 4.042), (-2.133, 3.785, 4.042), (-2.133, 3.685, 4.042), (-2.983, 3.685, 4.042), (-2.133, 3.785, 4.042), (-2.133, 3.785, 5.792), (-2.133, 3.685, 5.792), (-2.133, 3.685, 4.042), (-2.133, 3.785, 5.792), (-2.983, 3.785, 5.792), (-2.983, 3.685, 5.792), (-2.133, 3.685, 5.792), (-2.983, 3.785, 5.792), (-2.133, 3.785, 5.792), (-2.133, 3.785, 4.042), (-2.983, 3.785, 4.042), (-2.983, 3.685, 5.792), (-2.983, 3.685, 4.042), (-2.133, 3.685, 4.042), (-2.133, 3.685, 5.792)]
            }

            def Mesh "absorber32"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(2.189, 3.785, 2.518), (2.189, 3.785, 0.018), (2.189, 3.685, 0.018), (2.189, 3.685, 2.518), (2.189, 3.785, 0.018), (3.039, 3.785, 0.018), (3.039, 3.685, 0.018), (2.189, 3.685, 0.018), (3.039, 3.785, 0.018), (3.039, 3.785, 2.518), (3.039, 3.685, 2.518), (3.039, 3.685, 0.018), (3.039, 3.785, 2.518), (2.189, 3.785, 2.518), (2.189, 3.685, 2.518), (3.039, 3.685, 2.518), (2.189, 3.785, 2.518), (3.039, 3.785, 2.518), (3.039, 3.785, 0.018), (2.189, 3.785, 0.018), (2.189, 3.685, 2.518), (2.189, 3.685, 0.018), (3.039, 3.685, 0.018), (3.039, 3.685, 2.518)]
            }

            def Mesh "absorber57"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21, 25, 26, 27, 27, 24, 25, 29, 30, 31, 31, 28, 29, 33, 34, 35, 35, 32, 33]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.175, 3.685, 3.392), (5.175, 3.685, 5.792), (5.175, 3.695, 5.792), (5.175, 3.695, 3.392), (5.2029405, 3.79, 3.425), (5.175, 3.695, 3.392), (5.175, 3.695, 5.792), (5.275, 4.0350103, 5.792), (5.275, 4.0350103, 3.425), (5.275, 4.0350103, 5.792), (5.285, 4.0350103, 5.792), (5.285, 4.0350103, 3.425), (5.285, 4.0350103, 5.792), (5.285, 3.685, 5.792), (5.285, 3.685, 3.392), (5.285, 3.79, 3.392), (5.285, 3.685, 3.392), (5.285, 3.685, 5.792), (5.175, 3.685, 5.792), (5.175, 3.685, 3.392), (5.2029405, 3.79, 3.392), (5.285, 3.79, 3.392), (5.285, 3.685, 3.392), (5.175, 3.685, 3.392), (5.175, 3.685, 5.792), (5.285, 3.685, 5.792), (5.285, 4.0350103, 5.792), (5.275, 4.0350103, 5.792), (5.285, 3.79, 3.425), (5.285, 3.79, 3.392), (5.2029405, 3.79, 3.392), (5.2029405, 3.79, 3.425), (5.2029405, 3.79, 3.425), (5.275, 4.0350103, 3.425), (5.285, 4.0350103, 3.425), (5.285, 3.79, 3.425)]
            }

            def Mesh "absorber56"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21, 25, 26, 27, 27, 24, 25]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.175, 3.685, 0.018), (5.175, 3.685, 2.418), (5.175, 3.695, 2.418), (5.175, 3.695, 0.018), (5.175, 3.695, 0.018), (5.175, 3.695, 2.418), (5.275, 3.9350104, 2.418), (5.275, 3.9350104, 0.018), (5.275, 3.9350104, 0.018), (5.275, 3.9350104, 2.418), (5.285, 3.9350104, 2.418), (5.285, 3.9350104, 0.018), (5.285, 3.9350104, 0.018), (5.285, 3.9350104, 2.418), (5.285, 3.685, 2.418), (5.285, 3.685, 0.018), (5.285, 3.685, 0.018), (5.285, 3.685, 2.418), (5.175, 3.685, 2.418), (5.175, 3.685, 0.018), (5.175, 3.685, 0.018), (5.275, 3.9350104, 0.018), (5.285, 3.9350104, 0.018), (5.285, 3.685, 0.018), (5.175, 3.685, 2.418), (5.285, 3.685, 2.418), (5.285, 3.9350104, 2.418), (5.275, 3.9350104, 2.418)]
            }

            def Mesh "absorber55"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, 2.823, 0.018), (5.275, 2.823, 2.418), (5.175, 2.823, 2.418), (5.175, 2.823, 0.018), (5.275, 2.823, 2.418), (5.275, 3.673, 2.418), (5.175, 3.673, 2.418), (5.175, 2.823, 2.418), (5.275, 3.673, 2.418), (5.275, 3.673, 0.018), (5.175, 3.673, 0.018), (5.175, 3.673, 2.418), (5.275, 3.673, 0.018), (5.275, 2.823, 0.018), (5.175, 2.823, 0.018), (5.175, 3.673, 0.018), (5.275, 2.823, 0.018), (5.275, 3.673, 0.018), (5.275, 3.673, 2.418), (5.275, 2.823, 2.418), (5.175, 2.823, 0.018), (5.175, 2.823, 2.418), (5.175, 3.673, 2.418), (5.175, 3.673, 0.018)]
            }

            def Mesh "absorber54"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, 1.961, 0.018), (5.275, 1.961, 2.018), (5.175, 1.961, 2.018), (5.175, 1.961, 0.018), (5.275, 1.961, 2.018), (5.275, 2.811, 2.018), (5.175, 2.811, 2.018), (5.175, 1.961, 2.018), (5.275, 2.811, 2.018), (5.275, 2.811, 0.018), (5.175, 2.811, 0.018), (5.175, 2.811, 2.018), (5.275, 2.811, 0.018), (5.275, 1.961, 0.018), (5.175, 1.961, 0.018), (5.175, 2.811, 0.018), (5.275, 1.961, 0.018), (5.275, 2.811, 0.018), (5.275, 2.811, 2.018), (5.275, 1.961, 2.018), (5.175, 1.961, 0.018), (5.175, 1.961, 2.018), (5.175, 2.811, 2.018), (5.175, 2.811, 0.018)]
            }

            def Mesh "absorber53"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, 1.099, 0.018), (5.275, 1.099, 2.268), (5.175, 1.099, 2.268), (5.175, 1.099, 0.018), (5.275, 1.099, 2.268), (5.275, 1.949, 2.268), (5.175, 1.949, 2.268), (5.175, 1.099, 2.268), (5.275, 1.949, 2.268), (5.275, 1.949, 0.018), (5.175, 1.949, 0.018), (5.175, 1.949, 2.268), (5.275, 1.949, 0.018), (5.275, 1.099, 0.018), (5.175, 1.099, 0.018), (5.175, 1.949, 0.018), (5.275, 1.099, 0.018), (5.275, 1.949, 0.018), (5.275, 1.949, 2.268), (5.275, 1.099, 2.268), (5.175, 1.099, 0.018), (5.175, 1.099, 2.268), (5.175, 1.949, 2.268), (5.175, 1.949, 0.018)]
            }

            def Mesh "absorber2"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(-5.225, -1.499, 3.542), (-5.225, -1.499, 5.792), (-5.125, -1.499, 5.792), (-5.125, -1.499, 3.542), (-5.225, -1.499, 5.792), (-5.225, -2.349, 5.792), (-5.125, -2.349, 5.792), (-5.125, -1.499, 5.792), (-5.225, -2.349, 5.792), (-5.225, -2.349, 3.542), (-5.125, -2.349, 3.542), (-5.125, -2.349, 5.792), (-5.225, -2.349, 3.542), (-5.225, -1.499, 3.542), (-5.125, -1.499, 3.542), (-5.125, -2.349, 3.542), (-5.225, -1.499, 3.542), (-5.225, -2.349, 3.542), (-5.225, -2.349, 5.792), (-5.225, -1.499, 5.792), (-5.125, -1.499, 3.542), (-5.125, -1.499, 5.792), (-5.125, -2.349, 5.792), (-5.125, -2.349, 3.542)]
            }

            def Mesh "absorber51"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, -0.625, 0.018), (5.275, -0.625, 2.518), (5.175, -0.625, 2.518), (5.175, -0.625, 0.018), (5.275, -0.625, 2.518), (5.275, 0.225, 2.518), (5.175, 0.225, 2.518), (5.175, -0.625, 2.518), (5.275, 0.225, 2.518), (5.275, 0.225, 0.018), (5.175, 0.225, 0.018), (5.175, 0.225, 2.518), (5.275, 0.225, 0.018), (5.275, -0.625, 0.018), (5.175, -0.625, 0.018), (5.175, 0.225, 0.018), (5.275, -0.625, 0.018), (5.275, 0.225, 0.018), (5.275, 0.225, 2.518), (5.275, -0.625, 2.518), (5.175, -0.625, 0.018), (5.175, -0.625, 2.518), (5.175, 0.225, 2.518), (5.175, 0.225, 0.018)]
            }

            def Mesh "absorber50"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, -1.487, 0.018), (5.275, -1.487, 2.268), (5.175, -1.487, 2.268), (5.175, -1.487, 0.018), (5.275, -1.487, 2.268), (5.275, -0.637, 2.268), (5.175, -0.637, 2.268), (5.175, -1.487, 2.268), (5.275, -0.637, 2.268), (5.275, -0.637, 0.018), (5.175, -0.637, 0.018), (5.175, -0.637, 2.268), (5.275, -0.637, 0.018), (5.275, -1.487, 0.018), (5.175, -1.487, 0.018), (5.175, -0.637, 0.018), (5.275, -1.487, 0.018), (5.275, -0.637, 0.018), (5.275, -0.637, 2.268), (5.275, -1.487, 2.268), (5.175, -1.487, 0.018), (5.175, -1.487, 2.268), (5.175, -0.637, 2.268), (5.175, -0.637, 0.018)]
            }

            def Mesh "absorber52"
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 5, 6, 7, 7, 4, 5, 9, 10, 11, 11, 8, 9, 13, 14, 15, 15, 12, 13, 17, 18, 19, 19, 16, 17, 21, 22, 23, 23, 20, 21]
                rel material:binding = </Looks/Cara_03_Shedland>
                point3f[] points = [(5.275, 0.237, 0.018), (5.275, 0.237, 2.018), (5.175, 0.237, 2.018), (5.175, 0.237, 0.018), (5.275, 0.237, 2.018), (5.275, 1.087, 2.018), (5.175, 1.087, 2.018), (5.175, 0.237, 2.018), (5.275, 1.087, 2.018), (5.275, 1.087, 0.018), (5.175, 1.087, 0.018), (5.175, 1.087, 2.018), (5.275, 1.087, 0.018), (5.275, 0.237, 0.018), (5.175, 0.237, 0.018), (5.175, 1.087, 0.018), (5.275, 0.237, 0.018), (5.275, 1.087, 0.018), (5.275, 1.087, 2.018), (5.275, 0.237, 2.018), (5.175, 0.237, 0.018), (5.175, 0.237, 2.018), (5.175, 1.087, 2.018), (5.175, 1.087, 0.018)]
            }
        }
    }

    def Xform "acoustic"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Xform "speakers"
        {
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Xform "columns"
            {
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                def Mesh "column1"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(-3.7775, -0.1175, 3.8081708), (-3.9725, -0.1175, 3.8081708), (-3.9725, -0.1175, -0.05), (-3.7775, -0.1175, -0.05), (-3.7775, 0.0775, 3.8081708), (-3.7775, 0.0775, -0.05), (-3.9725, 0.0775, -0.05), (-3.9725, 0.0775, 3.8081708)]
                }

                def Mesh "column0"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(-3.7448518, -1.9436818, 4.0708623), (-3.7448518, -1.9436818, -0.05), (-3.8294592, -1.7679929, -0.05), (-3.8294592, -1.7679929, 4.0708623), (-3.9205408, -2.028289, 4.0708623), (-4.005148, -1.8526002, 4.0708623), (-4.005148, -1.8526002, -0.05), (-3.9205408, -2.028289, -0.05)]
                }

                def Mesh "column7"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(0.6614522, -3.2466402, 3.4924963), (0.6614522, -3.2466402, -0.05), (0.70484376, -3.4367514, -0.05), (0.70484376, -3.4367514, 3.4924963), (0.85156316, -3.2032487, 3.4924963), (0.89495474, -3.3933597, 3.4924963), (0.89495474, -3.3933597, -0.05), (0.85156316, -3.2032487, -0.05)]
                }

                def Mesh "column2"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(-0.8449547, -3.3933597, 3.4924963), (-0.8449547, -3.3933597, -0.05), (-0.6548438, -3.4367514, -0.05), (-0.6548438, -3.4367514, 3.4924963), (-0.80156314, -3.2032487, 3.4924963), (-0.6114522, -3.2466402, 3.4924963), (-0.6114522, -3.2466402, -0.05), (-0.80156314, -3.2032487, -0.05)]
                }

                def Mesh "column12"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(2.641224, 3.417019, 4.004793), (2.641224, 3.417019, -0.05), (2.5196433, 3.2645617, -0.05), (2.5196433, 3.2645617, 4.004793), (2.793681, 3.2954383, 4.004793), (2.6721005, 3.1429813, 4.004793), (2.6721005, 3.1429813, -0.05), (2.793681, 3.2954383, -0.05)]
                }

                def Mesh "column13"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(4.0225, 0.0775, 3.8081708), (4.0225, 0.0775, -0.05), (3.8275, 0.0775, -0.05), (3.8275, 0.0775, 3.8081708), (4.0225, -0.1175, 3.8081708), (3.8275, -0.1175, 3.8081708), (3.8275, -0.1175, -0.05), (4.0225, -0.1175, -0.05)]
                }

                def Mesh "column10"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(0.70484376, 3.3967512, 3.4924963), (0.70484376, 3.3967512, -0.05), (0.6614522, 3.2066402, -0.05), (0.6614522, 3.2066402, 3.4924963), (0.89495474, 3.3533597, 3.4924963), (0.85156316, 3.1632488, 3.4924963), (0.85156316, 3.1632488, -0.05), (0.89495474, 3.3533597, -0.05)]
                }

                def Mesh "column11"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(3.7948518, 1.9036818, 4.0708623), (3.7948518, 1.9036818, -0.05), (3.8794591, 1.7279929, -0.05), (3.8794591, 1.7279929, 4.0708623), (3.9705408, 1.9882891, 4.0708623), (4.055148, 1.8126003, 4.0708623), (4.055148, 1.8126003, -0.05), (3.9705408, 1.9882891, -0.05)]
                }

                def Mesh "column4"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(-0.80156314, 3.1632488, 3.4924963), (-0.8449547, 3.3533597, 3.4924963), (-0.8449547, 3.3533597, -0.05), (-0.80156314, 3.1632488, -0.05), (-0.6114522, 3.2066402, 3.4924963), (-0.6114522, 3.2066402, -0.05), (-0.6548438, 3.3967512, -0.05), (-0.6548438, 3.3967512, 3.4924963)]
                }

                def Mesh "column3"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(-2.591224, -3.4570189, 4.004793), (-2.591224, -3.4570189, -0.05), (-2.4696434, -3.3045616, -0.05), (-2.4696434, -3.3045616, 4.004793), (-2.743681, -3.3354383, 4.004793), (-2.6221006, -3.1829813, 4.004793), (-2.6221006, -3.1829813, -0.05), (-2.743681, -3.3354383, -0.05)]
                }

                def Mesh "column5"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(-4.005148, 1.8126003, 4.0708623), (-4.005148, 1.8126003, -0.05), (-3.8294592, 1.7279929, -0.05), (-3.8294592, 1.7279929, 4.0708623), (-3.9205408, 1.9882891, 4.0708623), (-3.7448518, 1.9036818, 4.0708623), (-3.7448518, 1.9036818, -0.05), (-3.9205408, 1.9882891, -0.05)]
                }

                def Mesh "column9"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(2.5196433, -3.3045616, 4.004793), (2.5196433, -3.3045616, -0.05), (2.641224, -3.4570189, -0.05), (2.641224, -3.4570189, 4.004793), (2.6721005, -3.1829813, 4.004793), (2.793681, -3.3354383, 4.004793), (2.793681, -3.3354383, -0.05), (2.6721005, -3.1829813, -0.05)]
                }

                def Mesh "column8"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(4.055148, -1.8526002, 4.0708623), (4.055148, -1.8526002, -0.05), (3.8794591, -1.7679929, -0.05), (3.8794591, -1.7679929, 4.0708623), (3.9705408, -2.028289, 4.0708623), (3.7948518, -1.9436818, 4.0708623), (3.7948518, -1.9436818, -0.05), (3.9705408, -2.028289, -0.05)]
                }

                def Mesh "column6"
                {
                    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                    int[] faceVertexIndices = [1, 2, 3, 3, 0, 1, 3, 5, 4, 4, 0, 3, 2, 6, 5, 5, 3, 2, 1, 7, 6, 6, 2, 1, 0, 4, 7, 7, 1, 0, 5, 6, 7, 7, 4, 5]
                    rel material:binding = </Looks/Rhino_Default>
                    point3f[] points = [(-2.743681, 3.2954383, 4.004793), (-2.743681, 3.2954383, -0.05), (-2.6221006, 3.1429813, -0.05), (-2.6221006, 3.1429813, 4.004793), (-2.591224, 3.417019, 4.004793), (-2.4696434, 3.2645617, 4.004793), (-2.4696434, 3.2645617, -0.05), (-2.591224, 3.417019, -0.05)]
                }
            }

            def Xform "speakers_floor"
            {
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Xform "speakers_columns"
            {
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                def Xform "speaker_co28"
                {
                    matrix4d xformOp:transform = ( (0.9749279121818243, -0.2225209339563114, 0, 0), (1.3625027479069426e-17, 5.969514578883233e-17, 1, 0), (-0.2225209339563114, -0.9749279121818243, 6.123031769111886e-17, 0), (0.687122138859925, 3.2854029648475236, 1.3750000000000002, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co29"
                {
                    matrix4d xformOp:transform = ( (0.7818314824680276, -0.6234898018587364, 0, 0), (3.817647864498318e-17, 4.787179005243576e-17, 1, 0), (-0.6234898018587364, -0.7818314824680276, 6.123031769111886e-17, 0), (2.5769450023400675, 3.32438660940445, 1.3749999999999998, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co46"
                {
                    matrix4d xformOp:transform = ( (-0.4338837391175585, -0.900968867902419, -2.775557561562892e-17, 0), (0.23318790205760284, -0.11229737504391755, 0.9659258262890684, 0), (-0.8702690981893706, 0.4190995092205183, 0.25881904510252035, 0), (3.8919277710746027, -1.7823218043129034, 0.2286474064951628, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co8"
                {
                    matrix4d xformOp:transform = ( (0.7818314824680294, -0.623489801858734, 2.7755575615628914e-17, 0), (-0.3257725265862199, -0.4085058274392879, -0.8526401643540922, 0), (0.5316124471299314, 0.666620923708744, -0.5224985647159489, 0), (-2.5760003808003846, -3.1372025231958154, 4.351136950170737, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co44"
                {
                    matrix4d xformOp:transform = ( (0.43388373911755657, -0.9009688679024199, -2.7755575615628914e-17, 0), (0.23318790205760173, 0.11229737504391635, 0.9659258262890691, 0), (-0.8702690981893721, -0.4190995092205167, 0.2588190451025188, 0), (3.8138286980334417, 1.9044961994837049, 0.22864740649516374, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co7"
                {
                    matrix4d xformOp:transform = ( (0.9749279121818243, -0.2225209339563114, 0, 0), (-0.11626686861142514, -0.5093984348165198, -0.8526401643540923, 0), (0.18973028570073547, 0.8312626952761027, -0.5224985647159488, 0), (-0.7798909890076982, -3.142001506572162, 3.8388399178048487, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co42"
                {
                    matrix4d xformOp:transform = ( (0.9749279121818222, -0.2225209339563208, 6.93889390390723e-18, 0), (0.05759265564189554, 0.2523299112746913, 0.9659258262890689, 0), (-0.2149387169983745, -0.9417080491465033, 0.2588190451025186, 0), (0.6726473479489083, 3.2219847622036553, 0.48153993935349165, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co43"
                {
                    matrix4d xformOp:transform = ( (0.7818314824680275, -0.6234898018587365, 2.7755575615628914e-17, 0), (0.16137103514823867, 0.20235287772346391, 0.965925826289068, 0), (-0.6022449020432074, -0.7551912207217364, 0.2588190451025218, 0), (2.5363875394686093, 3.2735291595674108, 0.25753634999133773, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co45"
                {
                    matrix4d xformOp:transform = ( (6.123031769111886e-17, -1, 0, 0), (0.2588190451025203, 1.584757235613934e-17, 0.9659258262890684, 0), (-0.9659258262890684, -5.914394520973615e-17, 0.2588190451025203, 0), (3.8449508795878744, 0.06999999947418356, 0.3435101059557687, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co41"
                {
                    matrix4d xformOp:transform = ( (0.9749279121818243, 0.2225209339563114, 0, 0), (-1.3625027479069426e-17, 5.969514578883233e-17, 1, 0), (0.2225209339563114, -0.9749279121818243, 6.123031769111886e-17, 0), (-0.8126091640963847, 3.2453491967353876, 1.3750000000000002, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co40"
                {
                    matrix4d xformOp:transform = ( (0.7818314824680295, 0.6234898018587339, 0, 0), (-3.817647864498303e-17, 4.7871790052435874e-17, 1, 0), (0.6234898018587339, -0.7818314824680295, 6.123031769111886e-17, 0), (-2.6676746702280427, 3.212158445069876, 1.375, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co47"
                {
                    matrix4d xformOp:transform = ( (-0.7818314824680287, -0.623489801858735, 1.3877787807814457e-17, 0), (0.1613710351482374, -0.20235287772346303, 0.9659258262890686, 0), (-0.6022449020432064, 0.755191220721738, 0.2588190451025203, 0), (2.677117206312847, -3.2013009962844743, 0.25753634999133845, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co48"
                {
                    matrix4d xformOp:transform = ( (-0.9749279121818243, -0.22252093395631148, -6.938893903907227e-18, 0), (0.05759265564189381, -0.25232991127469484, 0.9659258262890681, 0), (-0.2149387169983653, 0.9417080491465046, 0.2588190451025216, 0), (0.8481343721416305, -3.2219309951431514, 0.4815399393534916, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co49"
                {
                    matrix4d xformOp:transform = ( (-0.9749279121818246, 0.22252093395631017, 0, 0), (-0.05759265564189347, -0.25232991127469484, 0.9659258262890683, 0), (0.21493871699836412, 0.9417080491465052, 0.25881904510252157, 0), (-0.6226473489926371, -3.2619847632552834, 0.4815399393534926, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co2"
                {
                    matrix4d xformOp:transform = ( (-0.43388373911755646, 0.9009688679024199, -2.7755575615628907e-17, 0), (0.4707549403327691, 0.22670363094251306, -0.8526401643540913, 0), (-0.7682022436062389, -0.369946702631761, -0.5224985647159504, 0), (3.8180618165460625, 1.7067498343663317, 4.417206070149656, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co16"
                {
                    matrix4d xformOp:transform = ( (-0.4338837391175585, 0.900968867902419, 1.387778780781446e-17, 0), (0.2331879020576072, 0.11229737504391964, -0.9659258262890672, 0), (-0.8702690981893696, -0.41909950922051775, -0.2588190451025252, 0), (3.891927771074601, 1.7423218032612686, 2.971352593504838, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co17"
                {
                    matrix4d xformOp:transform = ( (6.123031769111886e-17, -1, 0, 0), (-0.25881904510260134, -1.5847572356144303e-17, 0.9659258262890468, 0), (-0.9659258262890468, -5.914394520973482e-17, -0.25881904510260134, 0), (3.9614194498840245, 0.06999999947418356, 2.4218232722141635, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co14"
                {
                    matrix4d xformOp:transform = ( (0.9749279121818222, -0.22252093395632078, -6.93889390390723e-18, 0), (-0.05759265564189451, -0.2523299112746868, 0.9659258262890701, 0), (-0.21493871699837475, -0.9417080491465045, -0.25881904510251397, 0), (0.6985640429877639, 3.335533222277266, 2.283793438816427, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co15"
                {
                    matrix4d xformOp:transform = ( (-0.7818314824680276, 0.6234898018587364, 4.912736883966317e-15, 0), (0.16137103514823184, 0.20235287772346297, -0.9659258262890695, 0), (-0.6022449020432091, -0.7551912207217369, -0.25881904510251685, 0), (2.677117206312855, 3.16130099523284, 2.9424636500086616, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co12"
                {
                    matrix4d xformOp:transform = ( (-0.7818314824680342, -0.6234898018587282, 0, 0), (-0.32577252658621747, 0.40850582743929126, -0.8526401643540918, 0), (0.5316124471299262, -0.666620923708748, -0.52249856471595, 0), (-2.4352707139561396, 3.209430686478752, 4.351136950170736, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co13"
                {
                    matrix4d xformOp:transform = ( (-0.9749279121818223, -0.2225209339563206, 0, 0), (-0.11626686861142997, 0.5093984348165188, -0.8526401643540923, 0), (0.18973028570074332, -0.831262695276101, -0.522498564715949, 0), (-0.6044039648149724, 3.1420552736326632, 3.838839917804847, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co10"
                {
                    matrix4d xformOp:transform = ( (6.123031769111886e-17, -1, 0, 0), (-0.5224985647159496, -3.199275311071122e-17, -0.8526401643540918, 0), (0.8526401643540918, 5.2207428139608844e-17, -0.5224985647159496, 0), (-3.7129658563315995, 0.06999999947418356, 4.15451465421851, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co11"
                {
                    matrix4d xformOp:transform = ( (-0.4338837391175525, -0.9009688679024219, 0, 0), (-0.4707549403327677, 0.22670363094250987, -0.8526401643540931, 0), (0.7682022436062422, -0.36994670263175844, -0.5224985647159478, 0), (-3.689962744548648, 1.8689242305887737, 4.417206070149657, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co1"
                {
                    matrix4d xformOp:transform = ( (-0.7818314824680276, 0.6234898018587364, 0, 0), (0.32577252658622174, 0.40850582743928776, -0.8526401643540917, 0), (-0.531612447129933, -0.6666209237087423, -0.5224985647159499, 0), (2.626000379756653, 3.097202522144179, 4.35113695017074, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co18"
                {
                    matrix4d xformOp:transform = ( (0.4338837391175602, 0.9009688679024181, -1.3877787807814457e-17, 0), (0.23318790205760917, -0.11229737504392112, -0.9659258262890664, 0), (-0.870269098189368, 0.41909950922051903, -0.25881904510252757, 0), (3.813828698033441, -1.9444962005353377, 2.9713525935048377, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co19"
                {
                    matrix4d xformOp:transform = ( (0.7818314824680276, 0.6234898018587364, 4.926614671774132e-15, 0), (0.1613710351482482, -0.20235287772346822, -0.9659258262890655, 0), (-0.6022449020432047, 0.7551912207217354, -0.2588190451025311, 0), (2.5363875394685995, -3.3135291606190425, 2.942463650008662, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co36"
                {
                    matrix4d xformOp:transform = ( (-0.781831482468032, 0.6234898018587309, 0, 0), (-3.8176478644982847e-17, -4.787179005243603e-17, 1.0000000000000002, 0), (0.623489801858731, 0.7818314824680322, 6.123031769111888e-17, 0), (-2.526945003383797, -3.3643866104560822, 1.3749999999999998, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co9"
                {
                    matrix4d xformOp:transform = ( (0.4338837391175684, -0.9009688679024141, -2.7755575615628914e-17, 0), (-0.47075494033276394, -0.22670363094251827, -0.8526401643540927, 0), (0.7682022436062352, 0.3699467026317718, -0.5224985647159479, 0), (-3.7680618175898064, -1.746749835417975, 4.417206070149657, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co34"
                {
                    matrix4d xformOp:transform = ( (-0.9749279121818243, -0.22252093395631148, 0, 0), (1.362502747906943e-17, -5.969514578883233e-17, 1, 0), (-0.22252093395631148, 0.9749279121818243, 6.123031769111886e-17, 0), (0.8626091630526443, -3.285349197787023, 1.3750000000000002, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co35"
                {
                    matrix4d xformOp:transform = ( (-0.9749279121818243, 0.22252093395631148, 0, 0), (-1.362502747906943e-17, -5.969514578883233e-17, 1, 0), (0.22252093395631148, 0.9749279121818243, 6.123031769111886e-17, 0), (-0.6371221399036556, -3.3254029658991566, 1.3750000000000002, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co4"
                {
                    matrix4d xformOp:transform = ( (0.43388373911756034, 0.900968867902418, 0, 0), (0.4707549403327664, -0.2267036309425143, -0.8526401643540925, 0), (-0.7682022436062383, 0.3699467026317648, -0.5224985647159484, 0), (3.739962743504904, -1.9089242316404027, 4.417206070149657, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co33"
                {
                    matrix4d xformOp:transform = ( (-0.7818314824680284, -0.6234898018587354, 0, 0), (3.817647864498312e-17, -4.7871790052435806e-17, 1, 0), (-0.6234898018587354, 0.7818314824680284, 6.123031769111886e-17, 0), (2.7176746691843046, -3.2521584461215083, 1.3750000000000002, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co30"
                {
                    matrix4d xformOp:transform = ( (0.43388373911756034, -0.900968867902418, 0, 0), (5.516661001147276e-17, 2.6566839187178756e-17, 1, 0), (-0.900968867902418, -0.43388373911756034, 6.123031769111886e-17, 0), (3.872435929939012, 1.932719954847994, 1.375, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co31"
                {
                    matrix4d xformOp:transform = ( (6.123031769111886e-17, -1, 0, 0), (6.123031769111886e-17, 3.7491518045553436e-33, 1, 0), (-1, -6.123031769111886e-17, 6.123031769111886e-17, 0), (3.909999999478128, 0.06999999947418356, 1.375, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co37"
                {
                    matrix4d xformOp:transform = ( (-0.4338837391175525, 0.9009688679024219, 0, 0), (-5.5166610011473e-17, -2.6566839187178278e-17, 1.0000000000000002, 0), (0.9009688679024221, 0.4338837391175526, 6.123031769111888e-17, 0), (-3.822435930982757, -1.972719955899634, 1.375, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co32"
                {
                    matrix4d xformOp:transform = ( (-0.43388373911756045, -0.900968867902418, 0, 0), (5.516661001147276e-17, -2.6566839187178762e-17, 1, 0), (-0.900968867902418, 0.43388373911756045, 6.123031769111886e-17, 0), (3.9505350029801733, -1.810545559677194, 1.375, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co38"
                {
                    matrix4d xformOp:transform = ( (6.123031769111886e-17, 1, 0, 0), (-6.123031769111886e-17, 3.7491518045553436e-33, 1, 0), (1, -6.123031769111886e-17, 6.123031769111886e-17, 0), (-3.860000000521868, -0.11000000052581616, 1.375, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co39"
                {
                    matrix4d xformOp:transform = ( (0.43388373911755235, 0.9009688679024219, 0, 0), (-5.5166610011473e-17, 2.6566839187178266e-17, 1, 0), (0.9009688679024219, -0.43388373911755235, 6.123031769111886e-17, 0), (-3.9005350040239155, 1.7705455586255632, 1.375, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co54"
                {
                    matrix4d xformOp:transform = ( (0.7818314824680295, 0.6234898018587339, 2.7755575615628914e-17, 0), (-0.16137103514823806, 0.20235287772346436, 0.965925826289068, 0), (0.6022449020432048, -0.7551912207217383, 0.25881904510252174, 0), (-2.627117207356585, 3.1613009952328386, 0.2575363499913395, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co3"
                {
                    matrix4d xformOp:transform = ( (6.123031769111886e-17, 1, 0, 0), (0.5224985647159485, -3.1992753110711153e-17, -0.8526401643540925, 0), (-0.8526401643540925, 5.220742813960889e-17, -0.5224985647159485, 0), (3.762965855287858, -0.11000000052581616, 4.154514654218509, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co52"
                {
                    matrix4d xformOp:transform = ( (6.123031769111886e-17, 1, 0, 0), (-0.258819045102522, 1.5847572356139443e-17, 0.965925826289068, 0), (0.965925826289068, -5.914394520973613e-17, 0.258819045102522, 0), (-3.794950880631617, -0.11000000052581616, 0.34351010595576853, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co53"
                {
                    matrix4d xformOp:transform = ( (0.43388373911756456, 0.900968867902416, -2.7755575615628914e-17, 0), (-0.23318790205760362, 0.11229737504391986, 0.965925826289068, 0), (0.8702690981893674, -0.41909950922052397, 0.258819045102522, 0), (-3.8419277721183462, 1.7423218032612722, 0.22864740649516285, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co55"
                {
                    matrix4d xformOp:transform = ( (0.9749279121818244, 0.2225209339563114, -6.9388939039072276e-18, 0), (-0.05759265564189379, 0.25232991127469484, 0.9659258262890683, 0), (0.21493871699836528, -0.941708049146505, 0.2588190451025216, 0), (-0.7981343731853692, 3.181930994091518, 0.4815399393534921, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co51"
                {
                    matrix4d xformOp:transform = ( (-0.43388373911754846, 0.9009688679024238, 1.3877787807814457e-17, 0), (-0.23318790205760428, -0.11229737504391503, 0.9659258262890683, 0), (0.8702690981893751, 0.41909950922050854, 0.2588190451025205, 0), (-3.7638286990771856, -1.944496200535344, 0.22864740649516255, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co50"
                {
                    matrix4d xformOp:transform = ( (-0.7818314824680295, 0.6234898018587339, -2.7755575615628914e-17, 0), (-0.16137103514823822, -0.20235287772346458, 0.9659258262890679, 0), (0.6022449020432048, 0.7551912207217383, 0.25881904510252207, 0), (-2.486387540512341, -3.313529160619045, 0.2575363499913395, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co6"
                {
                    matrix4d xformOp:transform = ( (0.9749279121818241, 0.22252093395631248, 0, 0), (0.11626686861142578, -0.5093984348165199, -0.8526401643540921, 0), (-0.18973028570073633, 0.8312626952761023, -0.5224985647159491, 0), (0.6544039637712302, -3.1820552746842976, 3.8388399178048487, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co5"
                {
                    matrix4d xformOp:transform = ( (0.7818314824680275, 0.6234898018587365, 0, 0), (0.32577252658622186, -0.4085058274392878, -0.8526401643540915, 0), (-0.531612447129933, 0.6666209237087419, -0.52249856471595, 0), (2.4852707129124005, -3.2494306875303813, 4.351136950170736, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co26"
                {
                    matrix4d xformOp:transform = ( (-0.7818314824680342, -0.6234898018587282, 1.3877787807814457e-17, 0), (-0.16137103514824155, 0.20235287772347194, -0.9659258262890661, 0), (0.6022449020431981, -0.7551912207217415, -0.2588190451025299, 0), (-2.4863875405123363, 3.2735291595674085, 2.9424636500086607, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co27"
                {
                    matrix4d xformOp:transform = ( (0.9749279121818243, 0.22252093395631142, 1.387778780781446e-17, 0), (0.057592655641894766, -0.2523299112746991, 0.965925826289067, 0), (0.214938716998365, -0.9417080491465035, -0.258819045102526, 0), (-0.8240510682242245, 3.295479454165132, 2.2837934388164283, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co24"
                {
                    matrix4d xformOp:transform = ( (6.123031769111886e-17, 1, 0, 0), (0.25881904510261694, -1.5847572356145258e-17, 0.9659258262890426, 0), (0.9659258262890426, -5.914394520973456e-17, -0.25881904510261694, 0), (-3.911419450927773, -0.11000000052581616, 2.421823272214167, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co25"
                {
                    matrix4d xformOp:transform = ( (-0.43388373911756845, -0.9009688679024141, 0, 0), (-0.23318790205761133, 0.1122973750439248, -0.9659258262890655, 0), (0.8702690981893634, -0.41909950922052663, -0.2588190451025311, 0), (-3.7638286990771816, 1.9044961994837095, 2.9713525935048377, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co22"
                {
                    matrix4d xformOp:transform = ( (0.7818314824680299, -0.6234898018587334, 4.954370247389761e-15, 0), (-0.1613710351482342, -0.2023528777234676, -0.965925826289068, 0), (0.6022449020432054, 0.7551912207217379, -0.2588190451025219, 0), (-2.6271172073565854, -3.2013009962844725, 2.9424636500086616, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co23"
                {
                    matrix4d xformOp:transform = ( (0.4338837391175684, -0.9009688679024141, 0, 0), (-0.23318790205761133, -0.11229737504392479, -0.9659258262890655, 0), (0.8702690981893634, 0.4190995092205266, -0.2588190451025311, 0), (-3.841927772118343, -1.7823218043129083, 2.971352593504839, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co20"
                {
                    matrix4d xformOp:transform = ( (-0.9749279121818243, -0.22252093395631148, 6.938893903907228e-18, 0), (-0.05759265564189287, 0.25232991127469073, 0.9659258262890692, 0), (-0.21493871699836556, 0.9417080491465057, -0.2588190451025174, 0), (0.8740510671804812, -3.335479455216763, 2.2837934388164256, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co21"
                {
                    matrix4d xformOp:transform = ( (-0.9749279121818246, 0.22252093395631017, 0, 0), (0.057592655641894495, 0.25232991127469934, 0.9659258262890669, 0), (0.21493871699836378, 0.9417080491465037, -0.2588190451025262, 0), (-0.6485640440314926, -3.3755332233289037, 2.283793438816429, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_co0"
                {
                    matrix4d xformOp:transform = ( (-0.9749279121818222, 0.22252093395632103, 0, 0), (0.11626686861143025, 0.509398434816519, -0.8526401643540923, 0), (-0.18973028570074368, -0.8312626952761009, -0.5224985647159492, 0), (0.8298909879639663, 3.1020015055205254, 3.8388399178048473, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }
            }

            def Xform "speakers_ceiling"
            {
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                def Xform "speaker_ce14"
                {
                    matrix4d xformOp:transform = ( (0.8090169943749453, -0.5877852522924761, 2.775557561562892e-17, 0), (-0.4618490798964419, -0.6356807235557043, -0.6185510852779312, 0), (0.3635752057158737, 0.5004183398789124, -0.7857445863011043, 0), (-1.6731274920364667, -2.2041548329952443, 5.476322911447755, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce1"
                {
                    matrix4d xformOp:transform = ( (-0.8090169943749481, -0.5877852522924721, 0, 0), (-0.46184907989643836, 0.6356807235557059, -0.618551085277932, 0), (0.3635752057158717, -0.5004183398789148, -0.7857445863011037, 0), (-1.5275044330489755, 2.269956177356253, 5.476322911447754, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce8"
                {
                    matrix4d xformOp:transform = ( (-0.8090169943749473, 0.5877852522924732, 2.775557561562892e-17, 0), (0.4618490798964395, 0.6356807235557057, -0.6185510852779316, 0), (-0.36357520571587215, -0.5004183398789139, -0.7857445863011041, 0), (1.7231274909884227, 2.1641548319436086, 5.476322911447755, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce10"
                {
                    matrix4d xformOp:transform = ( (0.7071067811865476, -0.7071067811865475, 0, 0), (-0.6654183135429903, -0.6654183135429904, -0.3382852878905692, 0), (0.23920382104306495, 0.23920382104306498, -0.9410436036639296, 0), (-0.8467612544922519, -0.76448203388047, 5.444322910508163, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce11"
                {
                    matrix4d xformOp:transform = ( (0.7071067811865476, 0.7071067811865475, 0, 0), (0.6654183135429903, -0.6654183135429904, -0.3382852878905692, 0), (-0.23920382104306495, 0.23920382104306498, -0.9410436036639296, 0), (0.769482032830629, -0.8917612544940489, 5.444322910508163, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce7"
                {
                    matrix4d xformOp:transform = ( (-0.3090169943749459, 0.9510565162951541, 2.7755575615628914e-17, 0), (0.7135767480821181, 0.23185514022570572, -0.6610986450957735, 0), (-0.6287421743322328, -0.20429071629284498, -0.7502989947031333, 0), (3.0180051955176928, 0.8578547384141209, 5.478806994087174, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce13"
                {
                    matrix4d xformOp:transform = ( (-1, -1.2246063538223773e-16, 0, 0), (-1.2246063538223773e-16, 1, -1.2246063538223773e-16, 0), (1.4996607218221374e-32, -1.2246063538223773e-16, -1, 0), (0.11499999947597761, -0.2450000005258186, 5.38, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce12"
                {
                    matrix4d xformOp:transform = ( (-0.7071067811865487, 0.7071067811865464, -2.775557561562892e-17, 0), (0.6654183135429891, 0.6654183135429913, -0.33828528789056966, 0), (-0.23920382104306484, -0.2392038210430657, -0.9410436036639293, 0), (0.8967612534442078, 0.7244820328288323, 5.444322910508164, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce9"
                {
                    matrix4d xformOp:transform = ( (-0.7071067811865475, -0.7071067811865476, 0, 0), (-0.6654183135429903, 0.6654183135429902, -0.3382852878905697, 0), (0.23920382104306534, -0.23920382104306528, -0.9410436036639294, 0), (-0.7194820338786735, 0.8517612534424113, 5.444322910508164, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce5"
                {
                    matrix4d xformOp:transform = ( (0.8090169943749461, 0.5877852522924749, 2.7755575615628914e-17, 0), (0.4618490798964411, -0.635680723555705, -0.6185510852779308, 0), (-0.3635752057158727, 0.5004183398789126, -0.7857445863011046, 0), (1.5775044320009297, -2.3099561784078895, 5.476322911447756, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce4"
                {
                    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.8434674046429508, -0.5371803582642284, 0), (0, 0.5371803582642284, -0.8434674046429508, 0), (-0.0650000005240221, -2.2176559061339995, 5.469559061538042, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce2"
                {
                    matrix4d xformOp:transform = ( (-0.30901699437494146, -0.9510565162951555, -2.7755575615628914e-17, 0), (-0.713576748082119, 0.2318551402257023, -0.661098645095774, 0), (0.6287421743322342, -0.20429071629284218, -0.750298994703133, 0), (-2.912382137578249, 1.029044911347249, 5.478806994087177, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce0"
                {
                    matrix4d xformOp:transform = ( (-1, -1.2246063538223773e-16, 0, 0), (-1.0329155429678294e-16, 0.8434674046429522, -0.537180358264226, 0), (6.578344798789522e-17, -0.537180358264226, -0.8434674046429522, 0), (0.11499999947597761, 2.1776559050823616, 5.469559061538041, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce3"
                {
                    matrix4d xformOp:transform = ( (0.3090169943749399, -0.9510565162951561, -2.775557561562892e-17, 0), (-0.7135767480821161, -0.23185514022570003, -0.661098645095778, 0), (0.6287421743322383, 0.20429071629284246, -0.7502989947031296, 0), (-2.9680051965657377, -0.8978547394657603, 5.478806994087175, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }

                def Xform "speaker_ce6"
                {
                    matrix4d xformOp:transform = ( (0.3090169943749482, 0.9510565162951534, 5.551115123125784e-17, 0), (0.7135767480821165, -0.23185514022570697, -0.6610986450957752, 0), (-0.628742174332234, 0.20429071629284706, -0.7502989947031321, 0), (2.962382136530202, -1.0690449123988877, 5.478806994087175, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]

                    over "element" (
                        prepend references = @./speaker.usda@
                    )
                    {
                        uniform token[] xformOpOrder = []
                    }
                }
            }
        }
    }

    def Xform "instances"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

def Xform "ceiling"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

